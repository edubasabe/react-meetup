{"version":3,"sources":["store/favorites-context.js","components/layout/MainNavigation.js","components/layout/Layout.js","components/ui/Card.js","components/meetups/MeetupItem.js","components/meetups/MeetupList.js","components/ui/PageHeading.js","pages/AllMeetups.js","utils/request.js","pages/Favorites.js","components/meetups/NewMeetupForm.js","pages/NewMeetup.js","App.js","index.js"],"names":["FavoritesContext","createContext","favorites","totalFavorites","addFavorite","favoriteMeetup","removeFavorite","meetupId","itemIsFavorite","FavoritesContextProvider","props","useState","userFavorites","setUserFavorites","context","length","prevUserFavorites","concat","filter","meetup","id","some","Provider","value","children","MainNavigation","favoritesCtx","useContext","bg","p","as","maxW","d","fontSize","color","ml","styleType","to","NavLink","fontWeight","mx","colorScheme","borderRadius","Layout","Card","boxShadow","rounded","overflow","MeetupItem","favoritesContext","m","src","image","alt","title","address","description","px","pb","onClick","HeartIcon","MeetupList","meetups","map","PageHeading","my","mb","AllMeetups","isLoading","setIsLoading","setMeetups","useEffect","fetch","then","res","json","response","meetupsList","Object","entries","item","mt","Favorites","content","spacing","LightBulbIcon","h","marginEnd","NewMeetupForm","titleInputRef","useRef","imageInputRef","addressInputRef","descriptionInputRef","onSubmit","event","preventDefault","meetupData","current","console","log","onAddMeetup","border","borderColor","type","placeholder","ref","required","justify","NewMeetup","history","useHistory","pt","method","body","JSON","stringify","headers","postMeetup","replace","App","path","exact","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.44c142a5.chunk.js","sourcesContent":["import { createContext, useState } from \"react\";\n\nconst FavoritesContext = createContext({\n  favorites: [],\n  totalFavorites: 0,\n  addFavorite: (favoriteMeetup) => {},\n  removeFavorite: (meetupId) => {},\n  itemIsFavorite: (meetupId) => {},\n});\n\nexport function FavoritesContextProvider(props) {\n  const [userFavorites, setUserFavorites] = useState([]);\n\n  function addFavoritesHandler(favoriteMeetup) {\n    setUserFavorites((prevUserFavorites) => {\n      return prevUserFavorites.concat(favoriteMeetup);\n    });\n  }\n\n  function removeFavoriteHandler(meetupId) {\n    setUserFavorites((prevUserFavorites) => {\n      return prevUserFavorites.filter((meetup) => meetup.id !== meetupId);\n    });\n  }\n\n  function itemIsFavoriteHandler(meetupId) {\n    return userFavorites.some((meetup) => meetup.id === meetupId);\n  }\n\n  const context = {\n    favorites: userFavorites,\n    totalFavorites: userFavorites.length,\n    addFavorite: addFavoritesHandler,\n    removeFavorite: removeFavoriteHandler,\n    itemIsFavorite: itemIsFavoriteHandler,\n  };\n\n  return (\n    <FavoritesContext.Provider value={context}>\n      {props.children}\n    </FavoritesContext.Provider>\n  );\n}\n\nexport default FavoritesContext;\n","import { useContext } from \"react\";\nimport { ListItem } from \"@chakra-ui/layout\";\nimport { Badge } from \"@chakra-ui/layout\";\nimport {\n  Container,\n  Flex,\n  Heading,\n  Link,\n  UnorderedList,\n} from \"@chakra-ui/layout\";\nimport { NavLink } from \"react-router-dom\";\nimport FavoritesContext from \"../../store/favorites-context\";\nexport default function MainNavigation() {\n  const favoritesCtx = useContext(FavoritesContext);\n  return (\n    <Flex bg=\"pink.800\" p=\"4\" as=\"header\">\n      <Container maxW=\"container.xl\" d=\"flex\">\n        <Heading as=\"h1\" fontSize=\"2xl\" color=\"white\">\n          React Meetups\n        </Heading>\n        <Flex as=\"nav\" ml=\"auto\">\n          <UnorderedList d=\"flex\" styleType=\"none\">\n            <ListItem>\n              <Link\n                to=\"/\"\n                as={NavLink}\n                color=\"whiteAlpha.800\"\n                fontWeight=\"bold\"\n              >\n                All Meetups\n              </Link>\n            </ListItem>\n            <ListItem>\n              <Link\n                to=\"/new-meetup\"\n                as={NavLink}\n                mx=\"4\"\n                color=\"whiteAlpha.800\"\n                fontWeight=\"bold\"\n              >\n                New Meetup\n              </Link>\n            </ListItem>\n            <ListItem>\n              <Link\n                to=\"/favorites\"\n                as={NavLink}\n                color=\"whiteAlpha.800\"\n                fontWeight=\"bold\"\n              >\n                Favorites\n                <Badge ml=\"2\" colorScheme=\"pink\" borderRadius=\"md\">\n                  {favoritesCtx.totalFavorites}\n                </Badge>\n              </Link>\n            </ListItem>\n          </UnorderedList>\n        </Flex>\n      </Container>\n    </Flex>\n  );\n}\n","import MainNavigation from \"./MainNavigation\";\n\nexport default function Layout(props) {\n  return (\n    <div>\n      <MainNavigation />\n      <main>{props.children}</main>\n    </div>\n  );\n}\n","import { Box } from \"@chakra-ui/layout\";\n\nexport default function Card(props) {\n  return (\n    <Box boxShadow=\"md\" rounded=\"md\" overflow=\"hidden\" {...props}>\n      {props.children}\n    </Box>\n  );\n}\n","import { useContext } from \"react\";\nimport { Button } from \"@chakra-ui/button\";\nimport { Box, ListItem, Heading, Text } from \"@chakra-ui/layout\";\nimport { Image } from \"@chakra-ui/image\";\nimport Card from \"../ui/Card\";\nimport FavoritesContext from \"../../store/favorites-context\";\nimport { HeartIcon } from \"@heroicons/react/outline\";\nimport Icon from \"@chakra-ui/icon\";\nexport default function MeetupItem(props) {\n  const favoritesContext = useContext(FavoritesContext);\n  const itemIsFavorite = favoritesContext.itemIsFavorite(props.id);\n\n  function toggleFavoritesStatusHandler() {\n    if (itemIsFavorite) {\n      favoritesContext.removeFavorite(props.id);\n    } else {\n      favoritesContext.addFavorite({\n        id: props.id,\n        title: props.title,\n        description: props.description,\n        image: props.image,\n        address: props.address,\n      });\n    }\n  }\n\n  return (\n    <ListItem>\n      <Card m=\"2\" maxW=\"xs\">\n        <Box>\n          <Image src={props.image} alt={props.title} />\n        </Box>\n        <Box p=\"4\">\n          <Heading as=\"h3\" fontSize=\"2xl\">\n            {props.title}\n          </Heading>\n          <Text as=\"address\">{props.address}</Text>\n          <Text>{props.description}</Text>\n        </Box>\n        <Box px=\"4\" pb=\"4\">\n          <Button\n            onClick={toggleFavoritesStatusHandler}\n            colorScheme={itemIsFavorite ? \"gray\" : \"pink\"}\n          >\n            {itemIsFavorite ? \"Remove from favorites\" : \"Add to Favorites\"}\n            <Icon as={HeartIcon} ml=\"1\" />\n          </Button>\n        </Box>\n      </Card>\n    </ListItem>\n  );\n}\n","import { UnorderedList } from \"@chakra-ui/layout\";\nimport MeetupItem from \"./MeetupItem\";\nexport default function MeetupList(props) {\n  return (\n    <UnorderedList styleType=\"none\" m=\"0\" d=\"flex\">\n      {props.meetups.map((meetup) => (\n        <MeetupItem\n          key={meetup.id}\n          id={meetup.id}\n          image={meetup.image}\n          title={meetup.title}\n          description={meetup.description}\n        />\n      ))}\n    </UnorderedList>\n  );\n}\n","import { Box } from \"@chakra-ui/layout\";\n\nexport default function PageHeading(props) {\n  return (\n    <Box my=\"4\" mb=\"6\">\n      {props.children}\n    </Box>\n  );\n}\n","import { useState, useEffect } from \"react\";\nimport { Text } from \"@chakra-ui/layout\";\nimport { Heading, Container } from \"@chakra-ui/layout\";\nimport MeetupList from \"../components/meetups/MeetupList\";\nimport PageHeading from \"../components/ui/PageHeading\";\nimport { getMeetups } from \"../utils/request\";\n\nfunction AllMeetups() {\n  const [isLoading, setIsLoading] = useState(true);\n  const [meetups, setMeetups] = useState([]);\n\n  useEffect(() => {\n    setIsLoading(true);\n    getMeetups().then((response) => {\n      const data = Object.entries(response);\n      const meetupsList = data.map((item) => ({ id: item[0], ...item[1] }));\n\n      setMeetups(meetupsList);\n      setIsLoading(false);\n    });\n  }, []);\n\n  if (isLoading) {\n    return (\n      <Container maxW=\"container.xl\">\n        <Text mt=\"6\">Loading...</Text>\n      </Container>\n    );\n  }\n\n  return (\n    <Container maxW=\"container.xl\">\n      <PageHeading>\n        <Heading as=\"h2\">All Meetups</Heading>\n      </PageHeading>\n      <MeetupList meetups={meetups} />\n    </Container>\n  );\n}\n\nexport default AllMeetups;\n","export function getMeetups() {\n  return fetch(\n    \"https://react-meetup-fe77a-default-rtdb.firebaseio.com/meetups.json\"\n  ).then((res) => res.json());\n}\n\nexport function postMeetup(meetup) {\n  return fetch(\n    \"https://react-meetup-fe77a-default-rtdb.firebaseio.com/meetups.json\",\n    {\n      method: \"POST\",\n      body: JSON.stringify(meetup),\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    }\n  );\n}\n","import { Heading, Container, Text, HStack } from \"@chakra-ui/layout\";\nimport Icon from \"@chakra-ui/icon\";\nimport { LightBulbIcon } from \"@heroicons/react/outline\";\nimport PageHeading from \"../components/ui/PageHeading\";\nimport { useContext } from \"react\";\nimport FavoritesContext from \"../store/favorites-context\";\nimport MeetupList from \"../components/meetups/MeetupList\";\nfunction Favorites() {\n  const favoritesCtx = useContext(FavoritesContext);\n  let content;\n  if (favoritesCtx.totalFavorites === 0) {\n    content = (\n      <HStack spacing=\"3\" mt=\"4\" bg=\"blue.100\" p=\"4\" rounded=\"base\">\n        <Icon as={LightBulbIcon} fontSize=\"2xl\" h=\"10\" />\n        <Text fontWeight=\"medium\" marginEnd=\"2\">\n          You got not favorites yet. <b>Start adding some?</b>\n        </Text>\n      </HStack>\n    );\n  } else {\n    content = <MeetupList meetups={favoritesCtx.favorites} />;\n  }\n\n  return (\n    <Container maxW=\"container.xl\">\n      <PageHeading>\n        <Heading as=\"h2\">My Favorites</Heading>\n        {content}\n      </PageHeading>\n    </Container>\n  );\n}\nexport default Favorites;\n","import { useRef } from \"react\";\nimport { Button } from \"@chakra-ui/button\";\nimport { FormControl, FormLabel } from \"@chakra-ui/form-control\";\nimport { Input } from \"@chakra-ui/input\";\nimport { Flex } from \"@chakra-ui/layout\";\nimport { Textarea } from \"@chakra-ui/textarea\";\nimport Card from \"../ui/Card\";\n\nexport default function NewMeetupForm(props) {\n  const titleInputRef = useRef();\n  const imageInputRef = useRef();\n  const addressInputRef = useRef();\n  const descriptionInputRef = useRef();\n\n  function handleSubmit(event) {\n    event.preventDefault();\n    const meetupData = {\n      title: titleInputRef.current.value,\n      image: imageInputRef.current.value,\n      address: addressInputRef.current.value,\n      description: descriptionInputRef.current.value,\n    };\n\n    console.log(\"form data!\", meetupData);\n    props.onAddMeetup(meetupData);\n  }\n\n  return (\n    <div>\n      <form onSubmit={handleSubmit}>\n        <Card mx=\"auto\" p=\"5\" border=\"1px\" borderColor=\"gray.200\">\n          <FormControl id=\"title\" mb=\"4\">\n            <FormLabel>Meetup title</FormLabel>\n            <Input\n              type=\"text\"\n              placeholder=\"Enter the meetup title\"\n              ref={titleInputRef}\n            />\n          </FormControl>\n\n          <FormControl id=\"image\">\n            <FormLabel>Meetup image</FormLabel>\n            <Input\n              type=\"url\"\n              required\n              placeholder=\"Enter the meetup image url\"\n              ref={imageInputRef}\n            />\n          </FormControl>\n\n          <FormControl id=\"address\" mb=\"4\">\n            <FormLabel>Meetup address</FormLabel>\n            <Input\n              type=\"text\"\n              placeholder=\"Enter the meetup address\"\n              ref={addressInputRef}\n            />\n          </FormControl>\n\n          <FormControl id=\"description\" mb=\"4\">\n            <FormLabel>Meetup description</FormLabel>\n            <Textarea\n              ref={descriptionInputRef}\n              placeholder=\"Enter a meetup description\"\n              required\n            />\n          </FormControl>\n          <Flex justify=\"flex-end\">\n            <Button colorScheme=\"pink\" type=\"submit\">\n              Add Meetup\n            </Button>\n          </Flex>\n        </Card>\n      </form>\n    </div>\n  );\n}\n","import { Heading, Container } from \"@chakra-ui/layout\";\nimport { useHistory } from \"react-router\";\nimport NewMeetupForm from \"../components/meetups/NewMeetupForm\";\nimport PageHeading from \"../components/ui/PageHeading\";\nimport { postMeetup } from \"../utils/request\";\n\nfunction NewMeetup() {\n  const history = useHistory();\n  function handleNewMeetup(meetup) {\n    console.log({ meetup });\n    postMeetup(meetup).then(() => {\n      history.replace(\"/\");\n    });\n  }\n\n  return (\n    <section>\n      <Container maxW=\"container.md\" pt=\"4\">\n        <PageHeading>\n          <Heading as=\"h2\">New Meetup</Heading>\n        </PageHeading>\n        <NewMeetupForm onAddMeetup={handleNewMeetup} />\n      </Container>\n    </section>\n  );\n}\nexport default NewMeetup;\n","import { Route, Switch } from \"react-router\";\nimport Layout from \"./components/layout/Layout\";\nimport AllMeetupsPage from \"./pages/AllMeetups\";\nimport Favorites from \"./pages/Favorites\";\nimport NewMeetup from \"./pages/NewMeetup\";\nfunction App() {\n  return (\n    <Layout>\n      <Switch>\n        <Route path=\"/\" exact>\n          <AllMeetupsPage />\n        </Route>\n        <Route path=\"/new-meetup\">\n          <NewMeetup />\n        </Route>\n        <Route path=\"/favorites\">\n          <Favorites />\n        </Route>\n      </Switch>\n    </Layout>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { ChakraProvider } from \"@chakra-ui/react\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { FavoritesContextProvider } from \"./store/favorites-context\";\n\nReactDOM.render(\n  <ChakraProvider>\n    <FavoritesContextProvider>\n      <BrowserRouter>\n        <App />\n      </BrowserRouter>\n    </FavoritesContextProvider>\n  </ChakraProvider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}